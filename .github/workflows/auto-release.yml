# Use to automaticlly create new releases

name: Auto Release

on:
  #   push:
  #     branches:
  #       - main

  workflow_dispatch:

jobs:
  create-release:
    container: registry.fedoraproject.org/fedora-minimal:latest
    runs-on: ubuntu-latest

    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
      short_sha: ${{ steps.run_short_sha.outputs.sha_short }}
      version: ${{ steps.run_version.outputs.version }}
    steps:
      - name: Installing dependencies
        run: dnf -y install jq tar gzip

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set sha_short
        id: run_short_sha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set version
        id: run_version
        run: echo "version=$(jq .version data/version/version.json -r)" >> $GITHUB_OUTPUT

      - name: Create release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.run_short_sha.outputs.sha_short }}
          release_name: ${{ steps.run_version.outputs.version }}
          draft: false
          prerelease: false

  upload-license:
    needs: create-release
    runs-on: ubuntu-latest

    steps:
      - name: Clone and check out branch
        uses: actions/checkout@v2

      - name: Upload License
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./LICENSE
          asset_name: LICENSE
          asset_content_type: text/plain

  fedora-build:
    needs: create-release

    container: registry.fedoraproject.org/fedora-minimal:latest
    runs-on: ubuntu-latest

    steps:
      - name: Installing git dependencies
        run: dnf -y install git tar gzip

      - name: Clone and check out branch
        uses: actions/checkout@v2

      - name: Installing program dependencies
        run: dnf -y install gcc make jq "pkgconfig(libcjson)" "pkgconfig(libpcap)"

      - name: Compiling
        run: make release

      - name: Upload Fedora executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./hawk
          asset_name: hawk-${{ needs.create-release.outputs.short_sha }}.fedora.x86-x64
          asset_content_type: application/x-executable

  ubuntu-build:
    needs: create-release

    runs-on: ubuntu-latest

    steps:
      - name: Updating OS
        run: sudo apt update && sudo apt upgrade -y

      - name: Installing git dependencies
        run: sudo apt -y install git

      - name: Clone and check out branch
        uses: actions/checkout@v2

      - name: Installing program dependencies
        run: sudo apt -y install git gcc make jq libcjson-dev libpcap-dev

      - name: Compiling with release flags
        run: make release

      - name: Upload Ubuntu executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./hawk
          asset_name: hawk-${{ needs.create-release.outputs.short_sha }}.ubuntu.x86-x64
          asset_content_type: application/x-executable
